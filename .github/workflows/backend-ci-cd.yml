name: Backend CI
on:
  push:
    branches:
      - '**'
    paths:
      - 'backend/**'
      - 'k8s/backend/deployment.yaml'
  pull_request:
    types: [opened, synchronize, reopened, closed]  # ✅ INCLUDE 'closed'
    branches:
      - main
    paths:
      - 'backend/**'
      - 'k8s/backend/deployment.yaml'

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Lint Go code
        run: go vet ./...

      - name: Run unit tests
        run: go test -v ./...

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/project_assignment_backend:backend-${{ github.sha }} .

      - name: 🔐 Login to Docker Hub
        if: github.event_name == 'pull_request'
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: 📦 Push Docker Image (only on PR)
        if: github.event_name == 'pull_request'
        run: docker push ${{ secrets.DOCKER_USERNAME }}/project_assignment_backend:backend-${{ github.sha }}

  update-deployment-pr:
    runs-on: ubuntu-latest
    needs: backend-ci # This job depends on a successful backend-ci job
    if: github.event_name == 'pull_request' && github.base_ref == 'main' && github.event.action != 'closed'
    permissions:
      contents: write # Needed to create and commit changes
      pull-requests: write # Needed to create a pull request
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update deployment image
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/project_assignment_backend:backend-${{ github.sha }}|" k8s/backend/deployment.yaml

      - name: Create Pull Request for deployment update
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Use the default GITHUB_TOKEN
          commit-message: "Update backend image to ${{ secrets.DOCKER_USERNAME }}/project_assignment_backend:backend-${{ github.sha }}"
          title: "Automated: Update backend image to ${{ secrets.DOCKER_USERNAME }}/project_assignment_backend:backend-${{ github.sha }}"
          body: "This PR updates the backend service image in `k8s/backend/deployment.yaml` to the newly built image `${{ secrets.DOCKER_USERNAME }}/project_assignment_backend:backend-${{ github.sha }}`."
          branch: "automated/update-backend-image-${{ github.sha }}" # Unique branch name for the PR
          base: "main" # Target the 'main' branch


  backend-deploy:
    runs-on: self-hosted
    needs: [update-deployment-pr]
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Decode and configure Kubeconfig
        run: |
          echo "$KUBECONFIG_BASE64" | base64 -d > kubeconfig
          echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV
        env:
          KUBECONFIG_BASE64: ${{ secrets.KUBECONFIG_BASE64 }}

      - name: Deploy Backend
        run: |
          kubectl apply -f ./k8s/backend/ -n monitoring-app