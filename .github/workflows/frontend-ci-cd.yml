# ðŸ“„ .github/workflows/frontend-ci.yml

name: Frontend CI

on:
  push:
    branches:
      - '**'
    paths:
      - 'frontend/**'
  pull_request:
    paths:
      - 'frontend/**'

jobs:
  frontend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Lint Frontend code
        run: npm run lint || echo "No linter setup"

      - name: Run unit tests
        run: npm test || echo "No tests available"

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/project_assignment_frontend:frontend-${{ github.sha }} .

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/project_assignment_frontend:frontend-${{ github.sha }}


  frontend-deploy:
    runs-on: self-hosted
    needs: frontend-ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Decode and configure Kubeconfig
        run: |
          echo "$KUBECONFIG_BASE64" | base64 -d > kubeconfig
          echo "KUBECONFIG=$PWD/kubeconfig" >> $GITHUB_ENV
        env:
          KUBECONFIG_BASE64: ${{ secrets.KUBECONFIG_BASE64 }}

      - name: Deploy Frontend
        run: |
          kubectl set image deployment/frontend frontend=${{ secrets.DOCKER_USERNAME }}/project_assignment_frontend:frontend-${{ github.sha }} -n monitoring-app
